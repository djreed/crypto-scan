{"version":3,"sources":["js/app.js","js/socket.js","js/stream.js","js/utilities.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtneA;AAAA","file":"../priv/static/js/app.js","sourcesContent":["\"use strict\";\n\nrequire(\"phoenix_html\");\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _phoenix = require(\"phoenix\");\n\nvar socket = new _phoenix.Socket(\"/socket\", { params: { token: window.userToken } });\n\n// When you connect, you'll often need to authenticate the client.\n// For example, imagine you have an authentication plug, `MyAuth`,\n// which authenticates the session and assigns a `:current_user`.\n// If the current user exists you can assign the user's token in\n// the connection for use in the layout.\n//\n// In your \"lib/web/router.ex\":\n//\n//     pipeline :browser do\n//       ...\n//       plug MyAuth\n//       plug :put_user_token\n//     end\n//\n//     defp put_user_token(conn, _) do\n//       if current_user = conn.assigns[:current_user] do\n//         token = Phoenix.Token.sign(conn, \"user socket\", current_user.id)\n//         assign(conn, :user_token, token)\n//       else\n//         conn\n//       end\n//     end\n//\n// Now you need to pass this token to JavaScript. You can do so\n// inside a script tag in \"lib/web/templates/layout/app.html.eex\":\n//\n//     <script>window.userToken = \"<%= assigns[:user_token] %>\";</script>\n//\n// You will need to verify the user token in the \"connect/2\" function\n// in \"lib/web/channels/user_socket.ex\":\n//\n//     def connect(%{\"token\" => token}, socket) do\n//       # max_age: 1209600 is equivalent to two weeks in seconds\n//       case Phoenix.Token.verify(socket, \"user socket\", token, max_age: 1209600) do\n//         {:ok, user_id} ->\n//           {:ok, assign(socket, :user, user_id)}\n//         {:error, reason} ->\n//           :error\n//       end\n//     end\n//\n// Finally, pass the token on connect as below. Or remove it\n// from connect if you don't care about authentication.\n\n// NOTE: The contents of this file will only be executed if\n// you uncomment its entry in \"assets/js/app.js\".\n\n// To use Phoenix channels, the first step is to import Socket\n// and connect at the socket path in \"lib/web/endpoint.ex\":\nsocket.connect();\n\n// Now that you are connected, you can join channels with a topic:\nvar channel = socket.channel(\"topic:subtopic\", {});\nchannel.join().receive(\"ok\", function (resp) {\n  console.log(\"Joined successfully\", resp);\n}).receive(\"error\", function (resp) {\n  console.log(\"Unable to join\", resp);\n});\n\nexports.default = socket;\n","\"use strict\";\n\nvar streamUrl = \"https://streamer.cryptocompare.com/\";\nvar fsym = \"BTC\";\nvar tsym = \"USD\";\nvar currentSubs;\nvar currentSubsText = \"\";\nvar dataUrl = \"https://min-api.cryptocompare.com/data/subs?fsym=\" + fsym + \"&tsyms=\" + tsym;\nvar socket = io(streamUrl);\n\n$.getJSON(dataUrl, function (data) {\n        currentSubs = data['USD']['TRADES'];\n        console.log(currentSubs);\n        for (var i = 0; i < currentSubs.length; i++) {\n                currentSubsText += currentSubs[i] + \", \";\n        }\n        $('#sub-exchanges').text(currentSubsText);\n        socket.emit('SubAdd', { subs: currentSubs });\n});\n\nsocket.on('m', function (currentData) {\n        var tradeField = currentData.substr(0, currentData.indexOf(\"~\"));\n        if (tradeField == CCC.STATIC.TYPE.TRADE) {\n                transformData(currentData);\n        }\n});\n\nvar transformData = function transformData(data) {\n        var coinfsym = CCC.STATIC.CURRENCY.getSymbol(fsym);\n        var cointsym = CCC.STATIC.CURRENCY.getSymbol(tsym);\n        var incomingTrade = CCC.TRADE.unpack(data);\n        console.log(incomingTrade);\n        var newTrade = {\n                Market: incomingTrade['M'],\n                Type: incomingTrade['T'],\n                ID: incomingTrade['ID'],\n                Price: CCC.convertValueToDisplay(cointsym, incomingTrade['P']),\n                Quantity: CCC.convertValueToDisplay(coinfsym, incomingTrade['Q']),\n                Total: CCC.convertValueToDisplay(cointsym, incomingTrade['TOTAL'])\n        };\n\n        if (incomingTrade['F'] & 1) {\n                newTrade['Type'] = \"SELL\";\n        } else if (incomingTrade['F'] & 2) {\n                newTrade['Type'] = \"BUY\";\n        } else {\n                newTrade['Type'] = \"UNKNOWN\";\n        }\n\n        displayData(newTrade);\n};\n\nvar displayData = function displayData(dataUnpacked) {\n        var maxTableSize = 30;\n        var length = $('table tr').length;\n        $('#trades').after(\"<tr class=\" + dataUnpacked.Type + \"><th>\" + dataUnpacked.Market + \"</th><th>\" + dataUnpacked.Type + \"</th><th>\" + dataUnpacked.ID + \"</th><th>\" + dataUnpacked.Price + \"</th><th>\" + dataUnpacked.Quantity + \"</th><th>\" + dataUnpacked.Total + \"</th></tr>\");\n\n        if (length >= maxTableSize) {\n                $('table tr:last').remove();\n        }\n};\n\n$('#unsubscribe').click(function () {\n        console.log('Unsubscribing to streamers');\n        $('#subscribe').removeClass('subon');\n        $(this).addClass('subon');\n        $('#stream-text').text('Stream stopped');\n        socket.emit('SubRemove', { subs: currentSubs });\n        $('#sub-exchanges').text(\"\");\n});\n\n$('#subscribe').click(function () {\n        console.log('Subscribing to streamers');\n        $('#unsubscribe').removeClass('subon');\n        $(this).addClass('subon');\n        $('#stream-text').text(\"Streaming...\");\n        socket.emit('SubAdd', { subs: currentSubs });\n        $('#sub-exchanges').text(currentSubsText);\n});\n","'use strict';\n\nvar CCC = CCC || {};\n\nCCC.STATIC = CCC.STATIC || {};\n\nCCC.STATIC.TYPE = {\n  'TRADE': '0',\n  'FEEDNEWS': '1',\n  'CURRENT': '2',\n  'LOADCOMPLATE': '3',\n  'COINPAIRS': '4',\n  'CURRENTAGG': '5',\n  'TOPLIST': '6',\n  'TOPLISTCHANGE': '7',\n  'ORDERBOOK': '8',\n  'FULLORDERBOOK': '9',\n  'ACTIVATION': '10',\n\n  'TRADECATCHUP': '100',\n  'NEWSCATCHUP': '101',\n\n  'TRADECATCHUPCOMPLETE': '300',\n  'NEWSCATCHUPCOMPLETE': '301'\n\n};\n\nCCC.STATIC.CURRENCY = CCC.STATIC.CURRENCY || {};\n\nCCC.STATIC.CURRENCY.SYMBOL = {\n  'BTC': 'Ƀ',\n  'LTC': 'Ł',\n  'DAO': 'Ð',\n  'USD': '$',\n  'CNY': '¥',\n  'EUR': '€',\n  'GBP': '£',\n  'JPY': '¥',\n  'PLN': 'zł',\n  'RUB': '₽',\n  'ETH': 'Ξ',\n  'GOLD': 'Gold g',\n  'INR': '₹',\n  'BRL': 'R$'\n};\n\nCCC.STATIC.CURRENCY.getSymbol = function (symbol) {\n  return CCC.STATIC.CURRENCY.SYMBOL[symbol] || symbol;\n};\n\nCCC.STATIC.UTIL = {\n  exchangeNameMapping: {\n    'CCCAGG': 'CryptoCompare Index',\n    'BTCChina': 'BTCC'\n  },\n  isMobile: function isMobile(userAgent) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(userAgent.substr(0, 4))) return true;\n    return false;\n  },\n  convertToMB: function convertToMB(bytes) {\n    return (parseInt(bytes, 10) / 1024 / 1024).toFixed(2) + ' MB';\n  },\n  getNameForExchange: function getNameForExchange(exchangeName) {\n    if (this.exchangeNameMapping.hasOwnProperty(exchangeName)) {\n      return this.exchangeNameMapping[exchangeName];\n    }\n    return exchangeName;\n  },\n  noExponents: function noExponents(value) {\n    var data = String(value).split(/[eE]/);\n    if (data.length == 1) return data[0];\n\n    var z = '',\n        sign = value < 0 ? '-' : '',\n        str = data[0].replace('.', ''),\n        mag = Number(data[1]) + 1;\n\n    if (mag < 0) {\n      z = sign + '0.';\n      while (mag++) {\n        z += '0';\n      }return z + str.replace(/^\\-/, '');\n    }\n    mag -= str.length;\n    while (mag--) {\n      z += '0';\n    }return str + z;\n  },\n  reduceFloatVal: function reduceFloatVal(value) {\n    value = parseFloat(value);\n    if (value > 1) {\n      value = Math.round(value * 100) / 100;\n      return value;\n    }\n    if (value >= 0.00001000) {\n      return parseFloat(value.toPrecision(4));\n    }\n    if (value >= 0.00000100) {\n      return parseFloat(value.toPrecision(3));\n    }\n    if (value >= 0.00000010) {\n      return parseFloat(value.toPrecision(2));\n    }\n    return parseFloat(value.toPrecision(1));\n  },\n  reduceReal: function reduceReal(value) {\n    value = parseFloat(value);\n    return parseFloat(value.toFixed(8));\n  },\n  convertCurrentKeyToAll: function convertCurrentKeyToAll(key) {\n    var valuesArray = key.split(\"~\");\n    valuesArray[0] = CCC.STATIC.TYPE.CURRENTAGG;\n    valuesArray[1] = 'CCCAGG';\n    return valuesArray.join('~');\n  },\n  convertCurrentKeyToTrade: function convertCurrentKeyToTrade(key) {\n    var valuesArray = key.split(\"~\");\n    valuesArray[0] = CCC.STATIC.TYPE.TRADE;\n    return valuesArray.join('~');\n  },\n  convertValueToDisplay: function convertValueToDisplay(symbol, value, filterNumberFunctionAngularJS, type, fullNumbers) {\n    var prefix = '';\n    var valueSign = 1;\n    value = parseFloat(value);\n    var valueAbs = Math.abs(value);\n    var decimalsOnBigNumbers = 2;\n    var decimalsOnNormalNumbers = 2;\n    var decimalsOnSmallNumbers = 4;\n    if (fullNumbers === true) {\n      decimalsOnBigNumbers = 2;\n      decimalsOnNormalNumbers = 0;\n      decimalsOnSmallNumbers = 4;\n    }\n    if (type == \"8decimals\") {\n      decimalsOnBigNumbers = 4;\n      decimalsOnNormalNumbers = 8;\n      decimalsOnSmallNumbers = 8;\n      if (value < 0.0001 && value >= 0.00001) {\n        decimalsOnSmallNumbers = 4;\n      }\n      if (value < 0.001 && value >= 0.0001) {\n        decimalsOnSmallNumbers = 5;\n      }\n      if (value < 0.01 && value >= 0.001) {\n        decimalsOnSmallNumbers = 6;\n      }\n      if (value < 0.1 && value >= 0.01) {\n        decimalsOnSmallNumbers = 7;\n      }\n    }\n    if (symbol != '') {\n      prefix = symbol + ' ';\n    }\n    if (value < 0) {\n      valueSign = -1;\n    }\n    if (value == 0) {\n      return prefix + '0';\n    }\n\n    if (value < 0.00001000 && value >= 0.00000100 && decimalsOnSmallNumbers > 3) {\n      decimalsOnSmallNumbers = 3;\n    }\n    if (value < 0.00000100 && value >= 0.00000010 && decimalsOnSmallNumbers > 2) {\n      decimalsOnSmallNumbers = 2;\n    }\n    if (value < 0.00000010 && decimalsOnSmallNumbers > 1) {\n      decimalsOnSmallNumbers = 1;\n    }\n\n    if (type == \"short\" || type == \"8decimals\") {\n      if (valueAbs > 10000000000) {\n        valueAbs = valueAbs / 1000000000;\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnBigNumbers) + ' B';\n      }\n      if (valueAbs > 10000000) {\n        valueAbs = valueAbs / 1000000;\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnBigNumbers) + ' M';\n      }\n      if (valueAbs > 10000) {\n        valueAbs = valueAbs / 1000;\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnBigNumbers) + ' K';\n      }\n      if (type == \"8decimals\" && valueAbs >= 100) {\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnBigNumbers);\n      }\n      if (valueAbs >= 1) {\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnNormalNumbers);\n      }\n      return prefix + (valueSign * valueAbs).toPrecision(decimalsOnSmallNumbers);\n    } else {\n      if (valueAbs >= 1) {\n        return prefix + filterNumberFunctionAngularJS(valueSign * valueAbs, decimalsOnNormalNumbers);\n      }\n\n      return prefix + this.noExponents((valueSign * valueAbs).toPrecision(decimalsOnSmallNumbers));\n    }\n  }\n};\n\nCCC.TRADE = CCC.TRADE || {};\n/*\n               trade fields binary values always in the last ~\n                                                     */\n\nCCC.TRADE.FLAGS = {\n  'SELL': 0x1 // hex for binary 1\n  , 'BUY': 0x2 // hex for binary 10\n  , 'UNKNOWN': 0x4 // hex for binary 100\n};\n\nCCC.TRADE.FIELDS = {\n  'T': 0x0 // hex for binary 0, it is a special case of fields that are always there TYPE\n  , 'M': 0x0 // hex for binary 0, it is a special case of fields that are always there MARKET\n  , 'FSYM': 0x0 // hex for binary 0, it is a special case of fields that are always there FROM SYMBOL\n  , 'TSYM': 0x0 // hex for binary 0, it is a special case of fields that are always there TO SYMBOL\n  , 'F': 0x0 // hex for binary 0, it is a special case of fields that are always there FLAGS\n  , 'ID': 0x1 // hex for binary 1                                                       ID\n  , 'TS': 0x2 // hex for binary 10                                                      TIMESTAMP\n  , 'Q': 0x4 // hex for binary 100                                                     QUANTITY\n  , 'P': 0x8 // hex for binary 1000                                                    PRICE\n  , 'TOTAL': 0x10 // hex for binary 10000                                                   TOTAL\n\n};\n\nCCC.TRADE.DISPLAY = CCC.TRADE.DISPLAY || {};\nCCC.TRADE.DISPLAY.FIELDS = {\n  'T': { \"Show\": false },\n  'M': { \"Show\": true, 'Filter': 'Market' },\n  'FSYM': { \"Show\": true, 'Filter': 'CurrencySymbol' },\n  'TSYM': { \"Show\": true, 'Filter': 'CurrencySymbol' },\n  'F': { \"Show\": true, 'Filter': 'TradeFlag' },\n  'ID': { \"Show\": true, 'Filter': 'Text' },\n  'TS': { 'Show': true, 'Filter': 'Date', 'Format': 'yyyy MMMM dd HH:mm:ss' },\n  'Q': { 'Show': true, 'Filter': 'Number', 'Symbol': 'FSYM' },\n  'P': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TSYM' },\n  'TOTAL': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TSYM' }\n\n};\n\nCCC.TRADE.pack = function (tradeObject) {\n  var mask = 0;\n  var packedTrade = '';\n  for (var field in tradeObject) {\n    packedTrade += '~' + tradeObject[field];\n    mask |= this.FIELDS[field];\n  }\n  return packedTrade.substr(1) + '~' + mask.toString(16);\n};\n\nCCC.TRADE.unpack = function (tradeString) {\n  var valuesArray = tradeString.split(\"~\");\n  var valuesArrayLenght = valuesArray.length;\n  var mask = valuesArray[valuesArrayLenght - 1];\n  var maskInt = parseInt(mask, 16);\n  var unpackedTrade = {};\n  var currentField = 0;\n  for (var property in this.FIELDS) {\n    if (this.FIELDS[property] === 0) {\n      unpackedTrade[property] = valuesArray[currentField];\n      currentField++;\n    } else if (maskInt & this.FIELDS[property]) {\n      unpackedTrade[property] = valuesArray[currentField];\n      currentField++;\n    }\n  }\n\n  return unpackedTrade;\n};\n\nCCC.TRADE.getKey = function (tradeObject) {\n  return tradeObject['T'] + '~' + tradeObject['M'] + '~' + tradeObject['FSYM'] + '~' + tradeObject['TSYM'];\n};\n\nCCC.CURRENT = CCC.CURRENT || {};\n/*\ncurrent fields mask values always in the last ~\n */\n\nCCC.CURRENT.FLAGS = {\n  'PRICEUP': 0x1 // hex for binary 1\n  , 'PRICEDOWN': 0x2 // hex for binary 10\n  , 'PRICEUNCHANGED': 0x4 // hex for binary 100\n  , 'BIDUP': 0x8 // hex for binary 1000\n  , 'BIDDOWN': 0x10 // hex for binary 10000\n  , 'BIDUNCHANGED': 0x20 // hex for binary 100000\n  , 'OFFERUP': 0x40 // hex for binary 1000000\n  , 'OFFERDOWN': 0x80 // hex for binary 10000000\n  , 'OFFERUNCHANGED': 0x100 // hex for binary 100000000\n  , 'AVGUP': 0x200 // hex for binary 1000000000\n  , 'AVGDOWN': 0x400 // hex for binary 10000000000\n  , 'AVGUNCHANGED': 0x800 // hex for binary 100000000000\n};\n\nCCC.CURRENT.FIELDS = {\n  'TYPE': 0x0 // hex for binary 0, it is a special case of fields that are always there\n  , 'MARKET': 0x0 // hex for binary 0, it is a special case of fields that are always there\n  , 'FROMSYMBOL': 0x0 // hex for binary 0, it is a special case of fields that are always there\n  , 'TOSYMBOL': 0x0 // hex for binary 0, it is a special case of fields that are always there\n  , 'FLAGS': 0x0 // hex for binary 0, it is a special case of fields that are always there\n  , 'PRICE': 0x1 // hex for binary 1\n  , 'BID': 0x2 // hex for binary 10\n  , 'OFFER': 0x4 // hex for binary 100\n  , 'LASTUPDATE': 0x8 // hex for binary 1000\n  , 'AVG': 0x10 // hex for binary 10000\n  , 'LASTVOLUME': 0x20 // hex for binary 100000\n  , 'LASTVOLUMETO': 0x40 // hex for binary 1000000\n  , 'LASTTRADEID': 0x80 // hex for binary 10000000\n  , 'VOLUMEHOUR': 0x100 // hex for binary 100000000\n  , 'VOLUMEHOURTO': 0x200 // hex for binary 1000000000\n  , 'VOLUME24HOUR': 0x400 // hex for binary 10000000000\n  , 'VOLUME24HOURTO': 0x800 // hex for binary 100000000000\n  , 'OPENHOUR': 0x1000 // hex for binary 1000000000000\n  , 'HIGHHOUR': 0x2000 // hex for binary 10000000000000\n  , 'LOWHOUR': 0x4000 // hex for binary 100000000000000\n  , 'OPEN24HOUR': 0x8000 // hex for binary 1000000000000000\n  , 'HIGH24HOUR': 0x10000 // hex for binary 10000000000000000\n  , 'LOW24HOUR': 0x20000 // hex for binary 100000000000000000\n  , 'LASTMARKET': 0x40000 // hex for binary 1000000000000000000, this is a special case and will only appear on CCCAGG messages\n};\n\nCCC.CURRENT.DISPLAY = CCC.CURRENT.DISPLAY || {};\nCCC.CURRENT.DISPLAY.FIELDS = {\n  'TYPE': { 'Show': false },\n  'MARKET': { 'Show': true, 'Filter': 'Market' },\n  'FROMSYMBOL': { 'Show': false },\n  'TOSYMBOL': { 'Show': false },\n  'FLAGS': { 'Show': false },\n  'PRICE': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'BID': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'OFFER': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LASTUPDATE': { 'Show': true, 'Filter': 'Date', 'Format': 'yyyy MMMM dd HH:mm:ss' },\n  'AVG': { 'Show': true, ' Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LASTVOLUME': { 'Show': true, 'Filter': 'Number', 'Symbol': 'FROMSYMBOL' },\n  'LASTVOLUMETO': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LASTTRADEID': { 'Show': true, 'Filter': 'String' },\n  'VOLUMEHOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'FROMSYMBOL' },\n  'VOLUMEHOURTO': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'VOLUME24HOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'FROMSYMBOL' },\n  'VOLUME24HOURTO': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'OPENHOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'HIGHHOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LOWHOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'OPEN24HOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'HIGH24HOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LOW24HOUR': { 'Show': true, 'Filter': 'Number', 'Symbol': 'TOSYMBOL' },\n  'LASTMARKET': { 'Show': true, 'Filter': 'String' }\n};\n\nCCC.CURRENT.pack = function (currentObject) {\n  var mask = 0;\n  var packedCurrent = '';\n  for (var property in this.FIELDS) {\n    if (currentObject.hasOwnProperty(property)) {\n      packedCurrent += '~' + currentObject[property];\n      mask |= this.FIELDS[property];\n    }\n  }\n  //removing first character beacsue it is a ~\n  return packedCurrent.substr(1) + '~' + mask.toString(16);\n};\n\nCCC.CURRENT.unpack = function (value) {\n  var valuesArray = value.split(\"~\");\n  var valuesArrayLenght = valuesArray.length;\n  var mask = valuesArray[valuesArrayLenght - 1];\n  var maskInt = parseInt(mask, 16);\n  var unpackedCurrent = {};\n  var currentField = 0;\n  for (var property in this.FIELDS) {\n    if (this.FIELDS[property] === 0) {\n      unpackedCurrent[property] = valuesArray[currentField];\n      currentField++;\n    } else if (maskInt & this.FIELDS[property]) {\n      //i know this is a hack, for cccagg, future code please don't hate me:(, i did this to avoid\n      //subscribing to trades as well in order to show the last market\n      if (property === 'LASTMARKET') {\n        unpackedCurrent[property] = valuesArray[currentField];\n      } else {\n        unpackedCurrent[property] = parseFloat(valuesArray[currentField]);\n      }\n      currentField++;\n    }\n  }\n\n  return unpackedCurrent;\n};\nCCC.CURRENT.getKey = function (currentObject) {\n  return currentObject['TYPE'] + '~' + currentObject['MARKET'] + '~' + currentObject['FROMSYMBOL'] + '~' + currentObject['TOSYMBOL'];\n};\nCCC.CURRENT.getKeyFromStreamerData = function (streamerData) {\n  var valuesArray = streamerData.split(\"~\");\n  return valuesArray[0] + '~' + valuesArray[1] + '~' + valuesArray[2] + '~' + valuesArray[3];\n};\n\nCCC.noExponents = function (value) {\n  var data = String(value).split(/[eE]/);\n  if (data.length == 1) return data[0];\n\n  var z = '',\n      sign = value < 0 ? '-' : '',\n      str = data[0].replace('.', ''),\n      mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + '0.';\n    while (mag++) {\n      z += '0';\n    }return z + str.replace(/^\\-/, '');\n  }\n  mag -= str.length;\n  while (mag--) {\n    z += '0';\n  }return str + z;\n};\n\nCCC.filterNumberFunctionPolyfill = function (value, decimals) {\n  var decimalsDenominator = Math.pow(10, decimals);\n  var numberWithCorrectDecimals = Math.round(value * decimalsDenominator) / decimalsDenominator;\n  var parts = numberWithCorrectDecimals.toString().split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n};\n\nCCC.convertValueToDisplay = function (symbol, value, type, fullNumbers) {\n  var prefix = '';\n  var valueSign = 1;\n  value = parseFloat(value);\n  var valueAbs = Math.abs(value);\n  var decimalsOnBigNumbers = 2;\n  var decimalsOnNormalNumbers = 2;\n  var decimalsOnSmallNumbers = 4;\n  if (fullNumbers === true) {\n    decimalsOnBigNumbers = 2;\n    decimalsOnNormalNumbers = 0;\n    decimalsOnSmallNumbers = 4;\n  }\n  if (symbol != '') {\n    prefix = symbol + ' ';\n  }\n  if (value < 0) {\n    valueSign = -1;\n  }\n\n  if (value == 0) {\n    return prefix + '0';\n  }\n\n  if (value < 0.00001000 && value >= 0.00000100 && decimalsOnSmallNumbers > 3) {\n    decimalsOnSmallNumbers = 3;\n  }\n  if (value < 0.00000100 && value >= 0.00000010 && decimalsOnSmallNumbers > 2) {\n    decimalsOnSmallNumbers = 2;\n  }\n  if (value < 0.00000010 && value >= 0.00000001 && decimalsOnSmallNumbers > 1) {\n    decimalsOnSmallNumbers = 1;\n  }\n\n  if (type == \"short\") {\n    if (valueAbs > 10000000000) {\n      valueAbs = valueAbs / 1000000000;\n      return prefix + CCC.filterNumberFunctionPolyfill(valueSign * valueAbs, decimalsOnBigNumbers) + ' B';\n    }\n    if (valueAbs > 10000000) {\n      valueAbs = valueAbs / 1000000;\n      return prefix + CCC.filterNumberFunctionPolyfill(valueSign * valueAbs, decimalsOnBigNumbers) + ' M';\n    }\n    if (valueAbs > 10000) {\n      valueAbs = valueAbs / 1000;\n      return prefix + CCC.filterNumberFunctionPolyfill(valueSign * valueAbs, decimalsOnBigNumbers) + ' K';\n    }\n    if (valueAbs >= 1) {\n      return prefix + CCC.filterNumberFunctionPolyfill(valueSign * valueAbs, decimalsOnNormalNumbers);\n    }\n    return prefix + (valueSign * valueAbs).toPrecision(decimalsOnSmallNumbers);\n  } else {\n    if (valueAbs >= 1) {\n      return prefix + CCC.filterNumberFunctionPolyfill(valueSign * valueAbs, decimalsOnNormalNumbers);\n    }\n\n    return prefix + CCC.noExponents((valueSign * valueAbs).toPrecision(decimalsOnSmallNumbers));\n  }\n};\n"]}